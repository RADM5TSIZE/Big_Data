apiVersion: apps/v1
kind: Deployment

metadata:
  name: mysql-deployment
  labels:
    app: mysql-db-deployment

spec:
  # a single replica
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db

  template:
    metadata:
      labels:
        app: mysql-db

    spec:

      # The mysql database
      containers:
        - name: mysql-db
          image: mysql
          
          # Set required environment variables to initialize the container
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "crimes"


          # Mount the volume that has been populated by the init container
          volumeMounts:
            - name: data-volume
              mountPath: ./init:/docker-entrypoint-initdb.d
              #the data is safed persistently in case teh container needs to be restarted 
              

          ports:
            - containerPort: 3306
            - containerPort: 33060

          livenessProbe:
            tcpSocket:
              port: 33060
            initialDelaySeconds: 300 # to avoid restarts while initializing the database

            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 33060

            initialDelaySeconds: 5
            periodSeconds: 10
      #          resources:
      #            requests:
      #              cpu: 1
      #              memory: "200M"
      #            limits:
      #              cpu: 1
      #              memory: "200M"
      # Define an empty volume to be shared by the init and mysql container

      volumes:
        - name: data-volume
          emptyDir: {}

---
#service
apiVersion: v1
kind: Service

metadata:
  name: my-app-mysql-service

spec:
  selector:
    app: mysql-db
  ports:

    - name: mysql-prot
      protocol: TCP
      port: 3306
      targetPort: 3306

    - name: mysql-xproto
      protocol: TCP
      port: 33060
      targetPort: 33060
