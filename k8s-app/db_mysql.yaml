Comment: >
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mysql-deployment
    labels:
      app: my-mysql-deployment

      
  spec:
    # A single mysql instance
    replicas: 1
    selector:
      matchLabels:
        app: my-mysql
    template:
      metadata:
        labels:
          app: my-mysql
      
        # The actual mysql database
        containers:
          - name: my-mysql
            image: mysql
            # Set required environment variables to initialize the container
            env:
              - name: MYSQL_ROOT_PASSWORD
                value: "mysecretpw"
              - name: MYSQL_DATABASE
                value: "sportsdb"
            # Mount the volume that has been populated by the init container
            volumeMounts:
              - name: data-volume
                mountPath: /docker-entrypoint-initdb.d/
            ports:
              - containerPort: 3306
              - containerPort: 33060
            livenessProbe:
              tcpSocket:
                port: 33060
              initialDelaySeconds: 300 # to avoid restarts while initializing the database
              periodSeconds: 10
            readinessProbe:
              tcpSocket:
                port: 33060
              initialDelaySeconds: 5
              periodSeconds: 10
        #          resources:
        #            requests:
        #              cpu: 1
        #              memory: "200M"
        #            limits:
        #              cpu: 1
        #              memory: "200M"
        # Define an empty volume to be shared by the init and mysql container
        volumes:
          - name: data-volume
            emptyDir: {}


apiVersion: apps/v1
kind: Deployment
metadata:
name: mysql-deployment
labels:
  app: my-mysql-deployment
spec:
# A single mysql instance
replicas: 1
selector:
  matchLabels:
    app: my-mysql
template:
  metadata:
    labels:
      app: my-mysql
  spec:
    # Use the init container to download data to the location where the mysql container expects it
    initContainers:
      - name: init-container-data-downloader
        image: curlimages/curl
        args:
          - "-o"
          - "/tmp/data/init.sql" # we are saving downloaded file as init.sql in /tmp/data directory
          - "https://pastebin.com/dl/bNQMsab9"
        volumeMounts:
          - name: data-volume
            mountPath: /tmp/data
    # The actual mysql database
    containers:
      - name: my-mysql
        image: mysql
        # Set required environment variables to initialize the container
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: "mysecretpw"
          - name: MYSQL_DATABASE
            value: "sportsdb"
        # Mount the volume that has been populated by the init container
        volumeMounts:
          - name: data-volume
            mountPath: /docker-entrypoint-initdb.d/
        ports:
          - containerPort: 3306
          - containerPort: 33060
        livenessProbe:
          tcpSocket:
            port: 33060
          initialDelaySeconds: 300 # to avoid restarts while initializing the database
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 33060
          initialDelaySeconds: 5
          periodSeconds: 10
    #          resources:
    #            requests:
    #              cpu: 1
    #              memory: "200M"
    #            limits:
    #              cpu: 1
    #              memory: "200M"
    # Define an empty volume to be shared by the init and mysql container
    volumes:
      - name: data-volume
        emptyDir: {}
